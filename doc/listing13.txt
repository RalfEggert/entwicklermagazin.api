<?php

namespace Customer\Action;

use Customer\Entity\Customer;
use Doctrine\ORM\EntityManager;
use Interop\Http\ServerMiddleware\DelegateInterface;
use Interop\Http\ServerMiddleware\MiddlewareInterface;
use Psr\Http\Message\ServerRequestInterface;
use Zend\Diactoros\Response\JsonResponse;

class PostEntityAction implements MiddlewareInterface
{
    /** @var  EntityManager */
    private $entityManager;

    public function __construct(EntityManager $entityManager)
    {
        $this->entityManager = $entityManager;
    }

    public function process(
        ServerRequestInterface $request,
        DelegateInterface $delegate
    ) {
        $postData = (array)json_decode($request->getBody()->getContents());

        $customer = new Customer(
            null,
            $postData['first_name'],
            $postData['last_name'],
            $postData['country']
        );

        $this->entityManager->persist($customer);
        $this->entityManager->flush();

        return new JsonResponse(['entity' => $customer], 201);
    }
}
